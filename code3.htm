<!DOCTYPE html>
<html>
<head>
    <title>Code 3 example</title>
    <meta charset="utf-8" />
    <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>
</head>
<body>
    <h1>Code 3 example - contest judging - judging runoffs</h1>
    <pre class="prettyprint">
Imports System.Data.SqlClient
Imports System.Data
Partial Class pages_judging_RunoffJudging
    Inherits System.Web.UI.Page
    Dim theRunoffID As Integer
    Dim RunoffsDT As Runoffs.ASA_RunoffsDataTable
    Dim RunoffsTA As New RunoffsTableAdapters.ASA_RunoffsTableAdapter
    Dim RunoffJudgingDT As Runoffs.ASA_RunoffJudgingDataTable
    Dim RunoffJudgingTA As New RunoffsTableAdapters.ASA_RunoffJudgingTableAdapter
    Dim EntriesDT As Runoffs.ASA_EntriesDataTable
    Dim EntriesTA As New RunoffsTableAdapters.ASA_EntriesTableAdapter
    Dim EntriesArray As New ArrayList
    Dim ItemChecked As Boolean = False
    Dim TheItemChecked As Integer
    Protected Sub Page_Load(sender As Object, e As System.EventArgs) Handles Me.Load
        If IsPostBack Then
            'needed to see if an item is checked.
            If lsvEntries.Visible = True Then
                For Each lvi As ListViewItem In lsvEntries.Items
                    If CType(lvi.FindControl("chkEntry"), CheckBox).Checked = True Then
                        ItemChecked = True
                        TheItemChecked = CInt(CType(lvi.FindControl("hfEntryID"), HiddenField).Value)
                    End If
                Next
            Else
                'soty, hopefully
                For Each lvi As ListViewItem In lsvSOTY.Items
                    If CType(lvi.FindControl("chkEntry"), CheckBox).Checked = True Then
                        ItemChecked = True
                        TheItemChecked = CInt(CType(lvi.FindControl("hfEntryID"), HiddenField).Value)
                    End If
                Next
            End If
        Else
            Dim err As Boolean = False 'ITPG 
            If Request.QueryString("RunoffID") IsNot Nothing Then
                Try
                    theRunoffID = CInt(Request.QueryString("RunoffID"))
                Catch ex As Exception
                    err = True
                    Response.Redirect("RunoffSelect.aspx")
                End Try
                RunoffsDT = RunoffsTA.GetRunoffByRunoffID(theRunoffID)
                If RunoffsDT.Count > 0 Then
                    'RunoffID is valid. Check if Open.
                    If RunoffsDT(0).RunoffOpen = True Then
                        RunoffJudgingDT = RunoffJudgingTA.GetRunoffJudgingByRunoffAndUserID(theRunoffID, Session("UserID"))
                        If RunoffJudgingDT.Count > 0 Then
                            'user has already judged this
                            err = True
                        Else
                            'Here we are GTG. Set up entries. 
                            'store the RunoffID in a Session variable.
                            Session("RunoffID") = theRunoffID
                            'add entries to ArrayList to randomize & present.
                            For Each row As DataRow In RunoffsDT
                                EntriesArray.Add(row.Item("EntryID"))
                            Next
                            'randomize entries.
                            EntriesArray = RandomOrder(EntriesArray)
                            'set up labels at top of page
                            lblEntryType.Text = RunoffsDT(0).RunoffName
                            Dim EntryTypeDescriptionDT As Runoffs.ASA_EntryTypeDescriptionsDataTable
                            Dim EntryTypeDescriptionTA As New RunoffsTableAdapters.ASA_EntryTypeDescriptionsTableAdapter
                            EntryTypeDescriptionDT = EntryTypeDescriptionTA.GetEntryTypeDescription(RunoffsDT(0).EntryTypeID)
                            If EntryTypeDescriptionDT.Count > 0 Then
                                lblEntryTypeDescription.Text = EntryTypeDescriptionDT(0).EntryTypeDescription
                            End If
                            lblCount.Text = RunoffsDT.Count
                            'check if SOTY or non-Soty
                            If RunoffsDT(0).EntryTypeID <> 15 Then
                                'set up ListView
                                lsvEntries.DataSource = EntriesArray
                                lsvEntries.DataBind()
                                pnlNonSOTY.Visible = True
                                pnlSOTY.Visible = False
                            Else
                                'set up ListView
                                lsvSOTY.DataSource = EntriesArray
                                lsvSOTY.DataBind()
                                pnlNonSOTY.Visible = False
                                pnlSOTY.Visible = True
                            End If
                        End If
                    Else
                        err = True
                    End If
                Else
                    err = True
                End If
            Else
                err = True
            End If
            If err = True Then
                Response.Redirect("RunoffSelect.aspx")
            End If
        End If
    End Sub
    Protected Sub lsvEntries_ItemDataBound(sender As Object, e As System.Web.UI.WebControls.ListViewItemEventArgs) Handles lsvEntries.ItemDataBound
        If e.Item.ItemType = ListViewItemType.DataItem Then
            EntriesDT = EntriesTA.GetEntryByEntryID(CInt(e.Item.DataItem))
            If EntriesDT.Count > 0 Then
                CType(e.Item.FindControl("lblNumber"), Label).Text = (e.Item.DataItemIndex + 1).ToString()
                CType(e.Item.FindControl("hfEntryID"), HiddenField).Value = EntriesDT(0).EntryID
                CType(e.Item.FindControl("imgThumb1"), Image).ImageUrl = "~/submissions/thumbnails/thumb_" & EntriesDT(0).Photo1
                CType(e.Item.FindControl("hlPhoto1"), HyperLink).Attributes.Add("onclick", "window.open('../../submissions/photos/" & EntriesDT(0).Photo1 & "','Photo1','height=600, width=500,status= no, resizable=yes, scrollbars=no, toolbar=no,location=no,menubar=yes ');return false;")
                If Not (EntriesDT(0).IsPhoto2Null) Then
                    CType(e.Item.FindControl("imgThumb2"), Image).ImageUrl = "~/submissions/thumbnails/thumb_" & EntriesDT(0).Photo2
                    CType(e.Item.FindControl("hlPhoto2"), HyperLink).Attributes.Add("onclick", "window.open('../../submissions/photos/" & EntriesDT(0).Photo2 & "','Photo2','height=600, width=500,status= no, resizable=yes, scrollbars=no, toolbar=no,location=no,menubar=yes ');return false;")
                    CType(e.Item.FindControl("pnlImg2"), Panel).Visible = True
                Else
                    CType(e.Item.FindControl("pnlImg2"), Panel).Visible = False
                End If
            End If
            CType(e.Item.FindControl("chkEntry"), CheckBox).InputAttributes("class") = "cbClass"
        End If
    End Sub
    Protected Sub lsvSOTY_ItemDataBound(sender As Object, e As System.Web.UI.WebControls.ListViewItemEventArgs) Handles lsvSOTY.ItemDataBound
        Dim SotyEntriesDT As Entries.ASA_EntriesDataTable
        Dim SotyEntriesTA As New EntriesTableAdapters.ASA_EntriesTableAdapter
        If e.Item.ItemType = ListViewItemType.DataItem Then
            EntriesDT = EntriesTA.GetEntryByEntryID(CInt(e.Item.DataItem))
            Dim thePNL As Panel = CType(e.Item.FindControl("pnlSOTYImgs"), Panel)
            'thePNL.CssClass = "pnlSOTY"
            If EntriesDT.Count > 0 Then
                'now we have the SOTY entry. Get the real entries associated with it.
                CType(e.Item.FindControl("hfEntryID"), HiddenField).Value = EntriesDT(0).EntryID
                CType(e.Item.FindControl("lblNumber"), Label).Text = "<br /> " & (e.Item.DataItemIndex + 1).ToString()
                SotyEntriesDT = SotyEntriesTA.GetSOTYEntriesNEWByEntryID(EntriesDT(0).EntryID)
                For Each SOTYRow As Entries.ASA_EntriesRow In SotyEntriesDT
                    'cycle through. Add images as needed.
                    Dim theIMG As New Image
                    theIMG.ImageUrl = "~/submissions/thumbnails/thumb_" & SOTYRow.Photo1
                    theIMG.CssClass = "imgDivSOTY"
                    thePNL.Controls.Add(theIMG)
                    If Not SOTYRow.IsPhoto2Null Then
                        Dim theIMG2 As New Image
                        theIMG2.ImageUrl = "~/submissions/thumbnails/thumb_" & SOTYRow.Photo2
                        theIMG2.CssClass = "imgDivSOTY"
                        thePNL.Controls.Add(theIMG2)
                    End If
                Next
                ' e.Item.Controls.Add(thePNL)
            End If
            CType(e.Item.FindControl("chkEntry"), CheckBox).InputAttributes("class") = "cbClass"
        End If
    End Sub
    Public Function RandomOrder(arrList As ArrayList) As ArrayList
        Dim r As New Random()
        For cnt As Integer = 0 To arrList.Count - 1
            Dim tmp As Object = arrList(cnt)
            Dim idx As Integer = r.[Next](arrList.Count - cnt) + cnt
            arrList(cnt) = arrList(idx)
            arrList(idx) = tmp
        Next
        Return arrList
    End Function
    Protected Sub btnVote2_Click(sender As Object, e As System.Web.UI.ImageClickEventArgs) Handles btnVote2.Click
        'If ItemChecked = False Then
        '    lblCheckError.Visible = True
        '    If lsvSOTY.Visible = True Then
        '        lsvSOTY.DataBind()
        '    End If
        '    Exit Sub
        'End If
        'everything's good; mark entry.
        RunoffJudgingTA.Insert(CInt(Session("RunoffID")), Session("UserID"), TheItemChecked, DateTime.Now)
        Response.Redirect("RunoffSelect.aspx?Return=true")
    End Sub
End Class



</pre>
</body>
</html>
